package ('package')
WHITE_SPACE (' ')
IDENTIFIER ('com')
DOT ('.')
IDENTIFIER ('ground0')
DOT ('.')
IDENTIFIER ('transaction')
DOT ('.')
IDENTIFIER ('core')
DOT ('.')
IDENTIFIER ('repository')
DOT ('.')
IDENTIFIER ('network')
DOT ('.')
IDENTIFIER ('util')
WHITE_SPACE ('\n\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('io')
DOT ('.')
IDENTIFIER ('reactivex')
DOT ('.')
IDENTIFIER ('SingleObserver')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('io')
DOT ('.')
IDENTIFIER ('reactivex')
DOT ('.')
IDENTIFIER ('disposables')
DOT ('.')
IDENTIFIER ('Disposable')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('okhttp3')
DOT ('.')
IDENTIFIER ('MediaType')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('okhttp3')
DOT ('.')
IDENTIFIER ('ResponseBody')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('org')
DOT ('.')
IDENTIFIER ('junit')
DOT ('.')
IDENTIFIER ('Assert')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('org')
DOT ('.')
IDENTIFIER ('junit')
DOT ('.')
IDENTIFIER ('Test')
WHITE_SPACE ('\n')
IDENTIFIER ('import')
WHITE_SPACE (' ')
IDENTIFIER ('retrofit2')
DOT ('.')
IDENTIFIER ('Response')
WHITE_SPACE ('\n\n')
KDoc ('/**\n * Created by 00-00-00 on 08/05/18.\n */')
WHITE_SPACE ('\n\n')
class ('class')
WHITE_SPACE (' ')
IDENTIFIER ('HttpStatusOperatorTest')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n\n  ')
AT ('@')
IDENTIFIER ('Test')
WHITE_SPACE ('\n  ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('shouldCallOnErrorFor404')
LPAR ('(')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n    ')
val ('val')
WHITE_SPACE (' ')
IDENTIFIER ('response')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Response')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
WHITE_SPACE (' ')
EQ ('=')
WHITE_SPACE ('\n      ')
IDENTIFIER ('Response')
DOT ('.')
IDENTIFIER ('error')
LPAR ('(')
INTEGER_LITERAL ('404')
COMMA (',')
WHITE_SPACE (' ')
IDENTIFIER ('ResponseBody')
DOT ('.')
IDENTIFIER ('create')
LPAR ('(')
IDENTIFIER ('MediaType')
DOT ('.')
IDENTIFIER ('parse')
LPAR ('(')
OPEN_QUOTE ('"')
REGULAR_STRING_PART ('application/json')
CLOSING_QUOTE ('"')
RPAR (')')
COMMA (',')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
CLOSING_QUOTE ('"')
RPAR (')')
RPAR (')')
WHITE_SPACE ('\n\n    ')
val ('val')
WHITE_SPACE (' ')
IDENTIFIER ('statusOperator')
WHITE_SPACE (' ')
EQ ('=')
WHITE_SPACE (' ')
IDENTIFIER ('HttpStatusOperator')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
LPAR ('(')
RPAR (')')
WHITE_SPACE ('\n\n    ')
IDENTIFIER ('statusOperator')
DOT ('.')
IDENTIFIER ('apply')
LPAR ('(')
IDENTIFIER ('response')
RPAR (')')
WHITE_SPACE ('\n        ')
DOT ('.')
IDENTIFIER ('subscribe')
LPAR ('(')
object ('object')
WHITE_SPACE (' ')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('SingleObserver')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onSuccess')
LPAR ('(')
IDENTIFIER ('t')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Unit')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n            ')
IDENTIFIER ('assert')
LPAR ('(')
false ('false')
COMMA (',')
WHITE_SPACE (' ')
LBRACE ('{')
OPEN_QUOTE ('"')
REGULAR_STRING_PART ('On Success was called')
CLOSING_QUOTE ('"')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n          ')
RBRACE ('}')
WHITE_SPACE ('\n\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onSubscribe')
LPAR ('(')
IDENTIFIER ('d')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Disposable')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n\n          ')
RBRACE ('}')
WHITE_SPACE ('\n\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onError')
LPAR ('(')
IDENTIFIER ('e')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Throwable')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n            ')
IDENTIFIER ('assert')
LPAR ('(')
true ('true')
COMMA (',')
WHITE_SPACE (' ')
LBRACE ('{')
OPEN_QUOTE ('"')
REGULAR_STRING_PART ('On Error was calledq')
CLOSING_QUOTE ('"')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n          ')
RBRACE ('}')
WHITE_SPACE ('\n        ')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n  ')
RBRACE ('}')
WHITE_SPACE ('\n\n  ')
AT ('@')
IDENTIFIER ('Test')
WHITE_SPACE ('\n  ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('shouldCallOnSuccessFor200')
LPAR ('(')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n    ')
val ('val')
WHITE_SPACE (' ')
IDENTIFIER ('response')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Response')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
WHITE_SPACE (' ')
EQ ('=')
WHITE_SPACE ('\n      ')
IDENTIFIER ('Response')
DOT ('.')
IDENTIFIER ('success')
LPAR ('(')
IDENTIFIER ('Unit')
RPAR (')')
WHITE_SPACE ('\n    ')
val ('val')
WHITE_SPACE (' ')
IDENTIFIER ('statusOperator')
WHITE_SPACE (' ')
EQ ('=')
WHITE_SPACE (' ')
IDENTIFIER ('HttpStatusOperator')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
LPAR ('(')
RPAR (')')
WHITE_SPACE ('\n    ')
IDENTIFIER ('statusOperator')
DOT ('.')
IDENTIFIER ('apply')
LPAR ('(')
IDENTIFIER ('response')
RPAR (')')
WHITE_SPACE ('\n        ')
DOT ('.')
IDENTIFIER ('subscribe')
LPAR ('(')
object ('object')
WHITE_SPACE (' ')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('SingleObserver')
LT ('<')
IDENTIFIER ('Unit')
GT ('>')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onSuccess')
LPAR ('(')
IDENTIFIER ('t')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Unit')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n            ')
IDENTIFIER ('assert')
LPAR ('(')
true ('true')
COMMA (',')
WHITE_SPACE (' ')
LBRACE ('{')
OPEN_QUOTE ('"')
REGULAR_STRING_PART ('On Success was called')
CLOSING_QUOTE ('"')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n          ')
RBRACE ('}')
WHITE_SPACE ('\n\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onSubscribe')
LPAR ('(')
IDENTIFIER ('d')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Disposable')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n\n          ')
RBRACE ('}')
WHITE_SPACE ('\n\n          ')
IDENTIFIER ('override')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('onError')
LPAR ('(')
IDENTIFIER ('e')
COLON (':')
WHITE_SPACE (' ')
IDENTIFIER ('Throwable')
RPAR (')')
WHITE_SPACE (' ')
LBRACE ('{')
WHITE_SPACE ('\n            ')
IDENTIFIER ('assert')
LPAR ('(')
false ('false')
COMMA (',')
WHITE_SPACE (' ')
LBRACE ('{')
OPEN_QUOTE ('"')
REGULAR_STRING_PART ('On Error was called')
CLOSING_QUOTE ('"')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n          ')
RBRACE ('}')
WHITE_SPACE ('\n        ')
RBRACE ('}')
RPAR (')')
WHITE_SPACE ('\n  ')
RBRACE ('}')
WHITE_SPACE ('\n')
RBRACE ('}')
WHITE_SPACE ('\n\n')
